# Makefile.in generated by automake 1.15.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#AUTOMAKE_OPTIONS = foreign subdir-objects

# Copyright (C) 2004 Oren Ben-Kiki
# This file is distributed under the same terms as the Automake macro files.

# Generate automatic documentation using Doxygen. Goals and variables values
# are controlled by the various DX_COND_??? conditionals set by autoconf.
#
# The provided goals are:
# doxygen-doc: Generate all doxygen documentation.
# doxygen-run: Run doxygen, which will generate some of the documentation
#              (HTML, CHM, CHI, MAN, RTF, XML) but will not do the post
#              processing required for the rest of it (PS, PDF, and some MAN).
# doxygen-man: Rename some doxygen generated man pages.
# doxygen-ps: Generate doxygen PostScript documentation.
# doxygen-pdf: Generate doxygen PDF documentation.
#
# Note that by default these are not integrated into the automake goals. If
# doxygen is used to generate man pages, you can achieve this integration by
# setting man3_MANS to the list of man pages generated and then adding the
# dependency:
#
#   $(man3_MANS): doxygen-doc
#
# This will cause make to run doxygen and generate all the documentation.
#
# The following variable is intended for use in Makefile.am:
#
# DX_CLEANFILES = everything to clean.
#
# This is usually added to MOSTLYCLEANFILES.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/cumbia-tango
pkgincludedir = $(includedir)/cumbia-tango
pkglibdir = $(libdir)/cumbia-tango
pkglibexecdir = $(libexecdir)/cumbia-tango
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4_ax_prog_doxygen.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(include_HEADERS) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = lib/cumbia-tango.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libcumbia_tango_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libcumbia_tango_la_OBJECTS = lib/libcumbia_tango_la-cumbiatango.lo \
	lib/libcumbia_tango_la-cutango-world.lo \
	lib/libcumbia_tango_la-cutango-world-config.lo \
	lib/libcumbia_tango_la-tsource.lo \
	lib/libcumbia_tango_la-tdevice.lo \
	lib/libcumbia_tango_la-cutreader.lo \
	lib/libcumbia_tango_la-cutangoactionfactories.lo \
	lib/libcumbia_tango_la-cuactionfactoryservice.lo \
	lib/libcumbia_tango_la-cudevicefactoryservice.lo \
	lib/libcumbia_tango_la-cueventactivity.lo \
	lib/libcumbia_tango_la-cutangoactioni.lo \
	lib/libcumbia_tango_la-cupollingactivity.lo \
	lib/libcumbia_tango_la-cuwriteactivity.lo \
	lib/libcumbia_tango_la-cutwriter.lo \
	lib/libcumbia_tango_la-cutconfiguration.lo \
	lib/libcumbia_tango_la-cutangoopt_builder.lo \
	lib/libcumbia_tango_la-cutconfigactivity.lo \
	lib/libcumbia_tango_la-cutdbpropertyreader.lo \
	lib/libcumbia_tango_la-cugettdbpropactivity.lo
libcumbia_tango_la_OBJECTS = $(am_libcumbia_tango_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libcumbia_tango_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) \
	$(libcumbia_tango_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libcumbia_tango_la_SOURCES)
DIST_SOURCES = $(libcumbia_tango_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/aminclude.am \
	$(top_srcdir)/lib/cumbia-tango.pc.in README compile \
	config.guess config.sub depcomp install-sh ltmain.sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango/missing autoconf
AUTOHEADER = ${SHELL} /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango/missing autoheader
AUTOMAKE = ${SHELL} /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CUMBIA_TANGO_VERSION = 0.1.0
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"cumbia-tango\" -DPACKAGE_TARNAME=\"cumbia-tango\" -DPACKAGE_VERSION=\"0.1.0\" -DPACKAGE_STRING=\"cumbia-tango\ 0.1.0\" -DPACKAGE_BUGREPORT=\"giacomo.strangolino@elettra.trieste.it\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DPACKAGE=\"cumbia-tango\" -DVERSION=\"0.1.0\" -DHAVE_LIBGL=1 -DHAVE_LIBPTHREAD=1 -DHAVE_FLOAT_H=1 -DHAVE_LIMITS_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_UNISTD_H=1 -DHAVE_MATH_H=1 -DTIME_WITH_SYS_TIME=1 -DHAVE_SYS_TIME_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ALARM=1 -DHAVE_STDLIB_H=1 -DHAVE_REALLOC=1 -DHAVE_GETTIMEOFDAY=1 -DHAVE_LOCALTIME_R=1 -DHAVE_MEMSET=1 -DHAVE_SELECT=1 -DHAVE_STRCASECMP=1 -DHAVE_STRCHR=1 -DHAVE_STRERROR=1 -DHAVE_STRSTR=1 -DHAVE_STRTOL=1 -DHAVE_STRTOUL=1 -DHAVE_CXX11=1 -DCUMBIA_PRINTINFO=1
DEPDIR = .deps
DLLTOOL = false
DOXYGEN_PAPER_SIZE = 
DSYMUTIL = 
DUMPBIN = 
DX_CONFIG = Doxyfile.in
DX_DOCDIR = doc
DX_DOT = 
DX_DOXYGEN = /usr/bin/doxygen
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='cumbia-tango' DOCDIR='doc' VERSION='0.1.0' PERL_PATH='/usr/bin/perl' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='YES' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 1
DX_FLAG_dot = 0
DX_FLAG_html = 1
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = cumbia-tango
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/x86_64-pc-linux-gnu/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lpthread -lGL 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = cumbia-tango
PACKAGE_BUGREPORT = giacomo.strangolino@elettra.trieste.it
PACKAGE_NAME = cumbia-tango
PACKAGE_STRING = cumbia-tango 0.1.0
PACKAGE_TARNAME = cumbia-tango
PACKAGE_URL = 
PACKAGE_VERSION = 0.1.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /usr/local/lib/pkgconfig:/usr/local/tango-9.2.5a/lib/pkgconfig:/usr/local/omniorb-4.2.1/lib/pkgconfig:/usr/local/zeromq-4.0.7/lib/pkgconfig:/home/giacomo/devel/epics/base-3.16.1/lib/pkgconfig:/usr/local/qwt-6.1.3/lib/pkgconfig
POW_LIB = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.1.0
abs_builddir = /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango
abs_srcdir = /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango
abs_top_builddir = /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango
abs_top_srcdir = /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
cumbia_CFLAGS = -I/usr/local/include/cumbia
cumbia_LIBS = -L/usr/local/lib64 -lcumbia
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/giacomo/devel/utils/git/cppqtclients/cumbia-libs/cumbia-tango/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /tmp/cumbia-tango
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
tango_CFLAGS = -D__x86_64__ -D__linux__ -D__OSVERSION__=2 -I/usr/local/tango-9.2.5a/include/tango -I/usr/local/omniorb-4.2.1/include -I/usr/local/zeromq-4.0.7/include
tango_LIBS = -L/usr/local/tango-9.2.5a/lib -L/usr/local/omniorb-4.2.1/lib -L/usr/local/zeromq-4.0.7/lib -ltango -lomniDynamic4 -lCOS4 -lomniORB4 -lomnithread -llog4tango -lzmq
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
ACLOCAL_AMFLAGS = -I m4
EXTRA_DIST = $(DX_CONFIG)
DX_CLEAN_HTML = doc/html
#DX_CLEAN_CHM = doc/chm
##DX_CLEAN_CHI = doc/cumbia-tango.chi
#DX_CLEAN_MAN = doc/man
#DX_CLEAN_RTF = doc/rtf
#DX_CLEAN_XML = doc/xml
#DX_CLEAN_PS = doc/cumbia-tango.ps
#DX_PS_GOAL = doxygen-ps
#DX_CLEAN_PDF = doc/cumbia-tango.pdf
#DX_PDF_GOAL = doxygen-pdf
#DX_CLEAN_LATEX = doc/latex
DX_CLEANFILES = \
    doc/cumbia-tango.tag \
    -r \
    $(DX_CLEAN_HTML) \
    $(DX_CLEAN_CHM) \
    $(DX_CLEAN_CHI) \
    $(DX_CLEAN_MAN) \
    $(DX_CLEAN_RTF) \
    $(DX_CLEAN_XML) \
    $(DX_CLEAN_PS) \
    $(DX_CLEAN_PDF) \
    $(DX_CLEAN_LATEX)

lib_LTLIBRARIES = libcumbia-tango.la
libcumbia_tango_la_SOURCES = lib/cumbiatango.cpp \
lib/cutango-world.cpp \
lib/cutango-world-config.cpp \
lib/tsource.cpp \
lib/tdevice.cpp \
lib/cutreader.cpp \
lib/cutangoactionfactories.cpp \
lib/cuactionfactoryservice.cpp \
lib/cudevicefactoryservice.cpp \
lib/cueventactivity.cpp \
lib/cutangoactioni.cpp \
lib/cupollingactivity.cpp \
lib/cuwriteactivity.cpp \
lib/cutwriter.cpp \
lib/cutconfiguration.cpp \
lib/cutangoopt_builder.cpp \
lib/cutconfigactivity.cpp \
lib/cutdbpropertyreader.cpp \
lib/cugettdbpropactivity.cpp


# Header files that must be installed are specified by the HEADERS family of variables.
# Headers can be installed in
# includedir, oldincludedir, pkgincludedir or any other directory you may have defined
#
include_HEADERS = lib/cumbiatango.h \
lib/cutango-world.h \
lib/cutango-world-config.h \
lib/tsource.h \
lib/tdevice.h \
lib/cutreader.h \
lib/cutangoactioni.h \
lib/cutangoactionfactoryi.h \
lib/cutangoactionfactories.h \
lib/cudevicefactoryservice.h \
lib/cuactionfactoryservice.h \
lib/cueventactivity.h \
lib/cupollingactivity.h \
lib/cuwriteactivity.h \
lib/cutwriter.h \
lib/cutconfiguration.h \
lib/cutangoopt_builder.h \
lib/cutconfigactivity.h \
lib/cutdbpropertyreader.h \
lib/cugettdbpropactivity.h

libcumbia_tango_la_CXXFLAGS = -g -Wall -std=c++11 -I$(top_srcdir)/src/lib -I$(top_srcdir)/src/lib/threads \
    -I$(top_srcdir)/src/lib/services \
    -I/usr/local/include -I/usr/include $(tango_CFLAGS)  $(cumbia_CFLAGS) -Ilib


# libcumbia_tango_la_LIBADD =  $(tango_LIBS)

# Use revision instead of version info
libcumbia_tango_la_LDFLAGS = $(tango_LIBS) -release $(CUMBIA_TANGO_VERSION)
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = lib/cumbia-tango.pc
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/aminclude.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/aminclude.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
lib/cumbia-tango.pc: $(top_builddir)/config.status $(top_srcdir)/lib/cumbia-tango.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
lib/$(am__dirstamp):
	@$(MKDIR_P) lib
	@: > lib/$(am__dirstamp)
lib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) lib/$(DEPDIR)
	@: > lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cumbiatango.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutango-world.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutango-world-config.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-tsource.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-tdevice.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutreader.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutangoactionfactories.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cuactionfactoryservice.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cudevicefactoryservice.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cueventactivity.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutangoactioni.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cupollingactivity.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cuwriteactivity.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutwriter.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutconfiguration.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutangoopt_builder.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutconfigactivity.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cutdbpropertyreader.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/libcumbia_tango_la-cugettdbpropactivity.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)

libcumbia-tango.la: $(libcumbia_tango_la_OBJECTS) $(libcumbia_tango_la_DEPENDENCIES) $(EXTRA_libcumbia_tango_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libcumbia_tango_la_LINK) -rpath $(libdir) $(libcumbia_tango_la_OBJECTS) $(libcumbia_tango_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f lib/*.$(OBJEXT)
	-rm -f lib/*.lo

distclean-compile:
	-rm -f *.tab.c

include lib/$(DEPDIR)/libcumbia_tango_la-cuactionfactoryservice.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cudevicefactoryservice.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cueventactivity.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cugettdbpropactivity.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cumbiatango.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cupollingactivity.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutango-world-config.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutango-world.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutangoactionfactories.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutangoactioni.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutangoopt_builder.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutconfigactivity.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutconfiguration.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutdbpropertyreader.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutreader.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cutwriter.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-cuwriteactivity.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-tdevice.Plo
include lib/$(DEPDIR)/libcumbia_tango_la-tsource.Plo

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

lib/libcumbia_tango_la-cumbiatango.lo: lib/cumbiatango.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cumbiatango.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cumbiatango.Tpo -c -o lib/libcumbia_tango_la-cumbiatango.lo `test -f 'lib/cumbiatango.cpp' || echo '$(srcdir)/'`lib/cumbiatango.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cumbiatango.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cumbiatango.Plo
#	$(AM_V_CXX)source='lib/cumbiatango.cpp' object='lib/libcumbia_tango_la-cumbiatango.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cumbiatango.lo `test -f 'lib/cumbiatango.cpp' || echo '$(srcdir)/'`lib/cumbiatango.cpp

lib/libcumbia_tango_la-cutango-world.lo: lib/cutango-world.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutango-world.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutango-world.Tpo -c -o lib/libcumbia_tango_la-cutango-world.lo `test -f 'lib/cutango-world.cpp' || echo '$(srcdir)/'`lib/cutango-world.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutango-world.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutango-world.Plo
#	$(AM_V_CXX)source='lib/cutango-world.cpp' object='lib/libcumbia_tango_la-cutango-world.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutango-world.lo `test -f 'lib/cutango-world.cpp' || echo '$(srcdir)/'`lib/cutango-world.cpp

lib/libcumbia_tango_la-cutango-world-config.lo: lib/cutango-world-config.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutango-world-config.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutango-world-config.Tpo -c -o lib/libcumbia_tango_la-cutango-world-config.lo `test -f 'lib/cutango-world-config.cpp' || echo '$(srcdir)/'`lib/cutango-world-config.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutango-world-config.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutango-world-config.Plo
#	$(AM_V_CXX)source='lib/cutango-world-config.cpp' object='lib/libcumbia_tango_la-cutango-world-config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutango-world-config.lo `test -f 'lib/cutango-world-config.cpp' || echo '$(srcdir)/'`lib/cutango-world-config.cpp

lib/libcumbia_tango_la-tsource.lo: lib/tsource.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-tsource.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-tsource.Tpo -c -o lib/libcumbia_tango_la-tsource.lo `test -f 'lib/tsource.cpp' || echo '$(srcdir)/'`lib/tsource.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-tsource.Tpo lib/$(DEPDIR)/libcumbia_tango_la-tsource.Plo
#	$(AM_V_CXX)source='lib/tsource.cpp' object='lib/libcumbia_tango_la-tsource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-tsource.lo `test -f 'lib/tsource.cpp' || echo '$(srcdir)/'`lib/tsource.cpp

lib/libcumbia_tango_la-tdevice.lo: lib/tdevice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-tdevice.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-tdevice.Tpo -c -o lib/libcumbia_tango_la-tdevice.lo `test -f 'lib/tdevice.cpp' || echo '$(srcdir)/'`lib/tdevice.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-tdevice.Tpo lib/$(DEPDIR)/libcumbia_tango_la-tdevice.Plo
#	$(AM_V_CXX)source='lib/tdevice.cpp' object='lib/libcumbia_tango_la-tdevice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-tdevice.lo `test -f 'lib/tdevice.cpp' || echo '$(srcdir)/'`lib/tdevice.cpp

lib/libcumbia_tango_la-cutreader.lo: lib/cutreader.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutreader.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutreader.Tpo -c -o lib/libcumbia_tango_la-cutreader.lo `test -f 'lib/cutreader.cpp' || echo '$(srcdir)/'`lib/cutreader.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutreader.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutreader.Plo
#	$(AM_V_CXX)source='lib/cutreader.cpp' object='lib/libcumbia_tango_la-cutreader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutreader.lo `test -f 'lib/cutreader.cpp' || echo '$(srcdir)/'`lib/cutreader.cpp

lib/libcumbia_tango_la-cutangoactionfactories.lo: lib/cutangoactionfactories.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutangoactionfactories.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutangoactionfactories.Tpo -c -o lib/libcumbia_tango_la-cutangoactionfactories.lo `test -f 'lib/cutangoactionfactories.cpp' || echo '$(srcdir)/'`lib/cutangoactionfactories.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutangoactionfactories.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutangoactionfactories.Plo
#	$(AM_V_CXX)source='lib/cutangoactionfactories.cpp' object='lib/libcumbia_tango_la-cutangoactionfactories.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutangoactionfactories.lo `test -f 'lib/cutangoactionfactories.cpp' || echo '$(srcdir)/'`lib/cutangoactionfactories.cpp

lib/libcumbia_tango_la-cuactionfactoryservice.lo: lib/cuactionfactoryservice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cuactionfactoryservice.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cuactionfactoryservice.Tpo -c -o lib/libcumbia_tango_la-cuactionfactoryservice.lo `test -f 'lib/cuactionfactoryservice.cpp' || echo '$(srcdir)/'`lib/cuactionfactoryservice.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cuactionfactoryservice.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cuactionfactoryservice.Plo
#	$(AM_V_CXX)source='lib/cuactionfactoryservice.cpp' object='lib/libcumbia_tango_la-cuactionfactoryservice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cuactionfactoryservice.lo `test -f 'lib/cuactionfactoryservice.cpp' || echo '$(srcdir)/'`lib/cuactionfactoryservice.cpp

lib/libcumbia_tango_la-cudevicefactoryservice.lo: lib/cudevicefactoryservice.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cudevicefactoryservice.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cudevicefactoryservice.Tpo -c -o lib/libcumbia_tango_la-cudevicefactoryservice.lo `test -f 'lib/cudevicefactoryservice.cpp' || echo '$(srcdir)/'`lib/cudevicefactoryservice.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cudevicefactoryservice.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cudevicefactoryservice.Plo
#	$(AM_V_CXX)source='lib/cudevicefactoryservice.cpp' object='lib/libcumbia_tango_la-cudevicefactoryservice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cudevicefactoryservice.lo `test -f 'lib/cudevicefactoryservice.cpp' || echo '$(srcdir)/'`lib/cudevicefactoryservice.cpp

lib/libcumbia_tango_la-cueventactivity.lo: lib/cueventactivity.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cueventactivity.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cueventactivity.Tpo -c -o lib/libcumbia_tango_la-cueventactivity.lo `test -f 'lib/cueventactivity.cpp' || echo '$(srcdir)/'`lib/cueventactivity.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cueventactivity.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cueventactivity.Plo
#	$(AM_V_CXX)source='lib/cueventactivity.cpp' object='lib/libcumbia_tango_la-cueventactivity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cueventactivity.lo `test -f 'lib/cueventactivity.cpp' || echo '$(srcdir)/'`lib/cueventactivity.cpp

lib/libcumbia_tango_la-cutangoactioni.lo: lib/cutangoactioni.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutangoactioni.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutangoactioni.Tpo -c -o lib/libcumbia_tango_la-cutangoactioni.lo `test -f 'lib/cutangoactioni.cpp' || echo '$(srcdir)/'`lib/cutangoactioni.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutangoactioni.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutangoactioni.Plo
#	$(AM_V_CXX)source='lib/cutangoactioni.cpp' object='lib/libcumbia_tango_la-cutangoactioni.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutangoactioni.lo `test -f 'lib/cutangoactioni.cpp' || echo '$(srcdir)/'`lib/cutangoactioni.cpp

lib/libcumbia_tango_la-cupollingactivity.lo: lib/cupollingactivity.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cupollingactivity.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cupollingactivity.Tpo -c -o lib/libcumbia_tango_la-cupollingactivity.lo `test -f 'lib/cupollingactivity.cpp' || echo '$(srcdir)/'`lib/cupollingactivity.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cupollingactivity.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cupollingactivity.Plo
#	$(AM_V_CXX)source='lib/cupollingactivity.cpp' object='lib/libcumbia_tango_la-cupollingactivity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cupollingactivity.lo `test -f 'lib/cupollingactivity.cpp' || echo '$(srcdir)/'`lib/cupollingactivity.cpp

lib/libcumbia_tango_la-cuwriteactivity.lo: lib/cuwriteactivity.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cuwriteactivity.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cuwriteactivity.Tpo -c -o lib/libcumbia_tango_la-cuwriteactivity.lo `test -f 'lib/cuwriteactivity.cpp' || echo '$(srcdir)/'`lib/cuwriteactivity.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cuwriteactivity.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cuwriteactivity.Plo
#	$(AM_V_CXX)source='lib/cuwriteactivity.cpp' object='lib/libcumbia_tango_la-cuwriteactivity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cuwriteactivity.lo `test -f 'lib/cuwriteactivity.cpp' || echo '$(srcdir)/'`lib/cuwriteactivity.cpp

lib/libcumbia_tango_la-cutwriter.lo: lib/cutwriter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutwriter.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutwriter.Tpo -c -o lib/libcumbia_tango_la-cutwriter.lo `test -f 'lib/cutwriter.cpp' || echo '$(srcdir)/'`lib/cutwriter.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutwriter.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutwriter.Plo
#	$(AM_V_CXX)source='lib/cutwriter.cpp' object='lib/libcumbia_tango_la-cutwriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutwriter.lo `test -f 'lib/cutwriter.cpp' || echo '$(srcdir)/'`lib/cutwriter.cpp

lib/libcumbia_tango_la-cutconfiguration.lo: lib/cutconfiguration.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutconfiguration.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutconfiguration.Tpo -c -o lib/libcumbia_tango_la-cutconfiguration.lo `test -f 'lib/cutconfiguration.cpp' || echo '$(srcdir)/'`lib/cutconfiguration.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutconfiguration.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutconfiguration.Plo
#	$(AM_V_CXX)source='lib/cutconfiguration.cpp' object='lib/libcumbia_tango_la-cutconfiguration.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutconfiguration.lo `test -f 'lib/cutconfiguration.cpp' || echo '$(srcdir)/'`lib/cutconfiguration.cpp

lib/libcumbia_tango_la-cutangoopt_builder.lo: lib/cutangoopt_builder.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutangoopt_builder.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutangoopt_builder.Tpo -c -o lib/libcumbia_tango_la-cutangoopt_builder.lo `test -f 'lib/cutangoopt_builder.cpp' || echo '$(srcdir)/'`lib/cutangoopt_builder.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutangoopt_builder.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutangoopt_builder.Plo
#	$(AM_V_CXX)source='lib/cutangoopt_builder.cpp' object='lib/libcumbia_tango_la-cutangoopt_builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutangoopt_builder.lo `test -f 'lib/cutangoopt_builder.cpp' || echo '$(srcdir)/'`lib/cutangoopt_builder.cpp

lib/libcumbia_tango_la-cutconfigactivity.lo: lib/cutconfigactivity.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutconfigactivity.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutconfigactivity.Tpo -c -o lib/libcumbia_tango_la-cutconfigactivity.lo `test -f 'lib/cutconfigactivity.cpp' || echo '$(srcdir)/'`lib/cutconfigactivity.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutconfigactivity.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutconfigactivity.Plo
#	$(AM_V_CXX)source='lib/cutconfigactivity.cpp' object='lib/libcumbia_tango_la-cutconfigactivity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutconfigactivity.lo `test -f 'lib/cutconfigactivity.cpp' || echo '$(srcdir)/'`lib/cutconfigactivity.cpp

lib/libcumbia_tango_la-cutdbpropertyreader.lo: lib/cutdbpropertyreader.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cutdbpropertyreader.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cutdbpropertyreader.Tpo -c -o lib/libcumbia_tango_la-cutdbpropertyreader.lo `test -f 'lib/cutdbpropertyreader.cpp' || echo '$(srcdir)/'`lib/cutdbpropertyreader.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cutdbpropertyreader.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cutdbpropertyreader.Plo
#	$(AM_V_CXX)source='lib/cutdbpropertyreader.cpp' object='lib/libcumbia_tango_la-cutdbpropertyreader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cutdbpropertyreader.lo `test -f 'lib/cutdbpropertyreader.cpp' || echo '$(srcdir)/'`lib/cutdbpropertyreader.cpp

lib/libcumbia_tango_la-cugettdbpropactivity.lo: lib/cugettdbpropactivity.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -MT lib/libcumbia_tango_la-cugettdbpropactivity.lo -MD -MP -MF lib/$(DEPDIR)/libcumbia_tango_la-cugettdbpropactivity.Tpo -c -o lib/libcumbia_tango_la-cugettdbpropactivity.lo `test -f 'lib/cugettdbpropactivity.cpp' || echo '$(srcdir)/'`lib/cugettdbpropactivity.cpp
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/libcumbia_tango_la-cugettdbpropactivity.Tpo lib/$(DEPDIR)/libcumbia_tango_la-cugettdbpropactivity.Plo
#	$(AM_V_CXX)source='lib/cugettdbpropactivity.cpp' object='lib/libcumbia_tango_la-cugettdbpropactivity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcumbia_tango_la_CXXFLAGS) $(CXXFLAGS) -c -o lib/libcumbia_tango_la-cugettdbpropactivity.lo `test -f 'lib/cugettdbpropactivity.cpp' || echo '$(srcdir)/'`lib/cugettdbpropactivity.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf lib/.libs lib/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f lib/$(DEPDIR)/$(am__dirstamp)
	-rm -f lib/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf lib/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf lib/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-local uninstall-pkgconfigDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \
	clean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \
	cscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-pkgconfigDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-local uninstall-pkgconfigDATA

.PRECIOUS: Makefile


doc: doxygen-doc

#doxygen-ps: doc/cumbia-tango.ps

#doc/cumbia-tango.ps: doc/cumbia-tango.tag
#	cd doc/latex; \
#	rm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
#	$(DX_LATEX) refman.tex; \
#	$(MAKEINDEX_PATH) refman.idx; \
#	$(DX_LATEX) refman.tex; \
#	countdown=5; \
#	while $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \
#	                  refman.log > /dev/null 2>&1 \
#	   && test $$countdown -gt 0; do \
#	    $(DX_LATEX) refman.tex; \
#	    countdown=`expr $$countdown - 1`; \
#	done; \
#	$(DX_DVIPS) -o ../cumbia-tango.ps refman.dvi

#doxygen-pdf: doc/cumbia-tango.pdf

#doc/cumbia-tango.pdf: doc/cumbia-tango.tag
#	cd doc/latex; \
#	rm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
#	$(DX_PDFLATEX) refman.tex; \
#	$(DX_MAKEINDEX) refman.idx; \
#	$(DX_PDFLATEX) refman.tex; \
#	countdown=5; \
#	while $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \
#	                  refman.log > /dev/null 2>&1 \
#	   && test $$countdown -gt 0; do \
#	    $(DX_PDFLATEX) refman.tex; \
#	    countdown=`expr $$countdown - 1`; \
#	done; \
#	mv refman.pdf ../cumbia-tango.pdf

.PHONY: doxygen-run doxygen-doc $(DX_PS_GOAL) $(DX_PDF_GOAL)

.INTERMEDIATE: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)

doxygen-run: doc/cumbia-tango.tag

doxygen-doc: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)

doc/cumbia-tango.tag: $(DX_CONFIG) $(pkginclude_HEADERS)
#	rm -rf doc
	$(DX_ENV) $(DX_DOXYGEN) $(srcdir)/$(DX_CONFIG)

#
# install-html and uninstall-local:
# remember to put tabs at the beginning of
# each line below install-html: or uninstall-local:
# 
install-html:
	$(MAKE) doc
	@$(NORMAL_INSTALL)
	$(MKDIR_P) $(DESTDIR)$(docdir)
	$(INSTALL_DATA) $(DX_DOCDIR)/html/* $(DESTDIR)$(docdir)

uninstall-local:
	@$(NORMAL_UNINSTALL)
	echo "removing $(DESTDIR)$(docdir)"
	rm -fr $(DESTDIR)$(docdir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
